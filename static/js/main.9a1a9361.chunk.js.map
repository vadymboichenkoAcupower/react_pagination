{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","amountOfPages","Math","ceil","pages","className","cn","disabled","href","onClick","map","page","active","items","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","lastItemOnPage","min","length","firstItemOnPage","pageItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAQd,EAAW,EAAGW,GAE5B,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UACFC,IAAG,YAAa,CACdC,SAA0B,IAAhBR,IAFd,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,WACa,IAAhBV,GACFC,EAAaD,EAAc,IAPjC,oBAeDK,EAAMM,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQb,IAAgBY,IAH9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAYT,EAAaW,IAJpC,SAMGA,KAREA,MAaT,oBAAIN,UACFC,IAAG,YAAa,CACdC,SAAUR,IAAgBE,IAF9B,SAME,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAAS,WACHV,EAAcE,GAChBD,EAAaD,EAAc,IAPjC,wBC9DFc,EAAQvB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBiB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,EAAiBjB,KAAKkB,IAAIrB,EAAckB,EAAcJ,EAAMQ,QAC5DC,GAAoBvB,EAAc,GAAKkB,EAAgB,EAEvDM,EAAYV,EAAMW,MAAMF,EAAkB,EAAGH,GAEnD,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCuB,EADjC,cACsDH,EADtD,eAC2EN,EAAMQ,OADjF,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAOT,EACPU,SAAU,SAACC,GACTV,GAAiBU,EAAMC,OAAOH,OAC9BV,EAAe,IAPnB,UAUE,wBAAQU,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOgB,EAAMQ,OACbvB,QAASmB,EACTlB,YAAaA,EACbC,aAAc,SAAAW,GAAI,OAAIK,EAAeL,MAGvC,6BACGY,EAAUb,KAAI,SAACqB,GACd,OAAO,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCxD1BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9a1a9361.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (value: number) => void\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const amountOfPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, amountOfPages);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={\n        cn('page-item', {\n          disabled: currentPage === 1,\n        })\n      }\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={cn(\n            'page-item',\n            { active: currentPage === page },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={(): void => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={\n        cn('page-item', {\n          disabled: currentPage === amountOfPages,\n        })\n      }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === amountOfPages}\n          onClick={() => {\n            if (currentPage < amountOfPages) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const lastItemOnPage = Math.min(currentPage * itemsPerPage, items.length);\n  const firstItemOnPage = ((currentPage - 1) * itemsPerPage) + 1;\n\n  const pageItems = items.slice(firstItemOnPage - 1, lastItemOnPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={page => setCurrentPage(page)}\n      />\n\n      <ul>\n        {pageItems.map((item) => {\n          return <li key={item} data-cy=\"item\">{item}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}